!img /files/images/experian_logo.png
!lastmodified

!3 '''Description:'''  This is System test to verify the Pie chart data for Number of Users by Latest Status

!*> Variable & Setup
!path lib/*.jar

!|dbfit.PostgresTest                       |

!|ConnectUsingFile|${env} |

|set option|bind symbols|false|
*!
!4 '''Test 1:''' Verify the Pie Chart data for Number of Users by Latest Status

!*> '''Given''' Report is created on micro-strategy and delivered to Test team for validation.
!*> Clear Table
!|Execute|delete from clientaudit.f_user_audit_activity |

|commit|
*!

!*> insert Data
!|com.objectmentor.fixtures.CommandLineFixture|
|command|./sqlfiles/pgexecutesql.sh ${dbname} user_dashboard/f_user_audit_activity.sql|x|
|contains|x.stdout|Insert Successful|
*!

*!
!*> '''When'''  MSTR report is executed and MSTR produced a csv file
!*> Execute MSTR report
|com.objectmentor.fixtures.CommandLineFixture|
|command|ssh -tt -i ${bastionkey} -o !-StrictHostKeyChecking=no-! ${mstrServer} 'bash -s' << EOF  sleep 5;sudo /opt/MicroStrategy/bin/mstrsysmgr -w /home/genesaas/runTest.smw -p user=administrator password= project=${dbname}; exit;EOF|
*!
!*> '''And''' Copy file from MSTR server to .SaasBiTest.ClientLevelReport.UserReports.UserDashboard.DbFit Server and Load csv file into postgres DB [local instance]
|com.objectmentor.fixtures.CommandLineFixture|
|command|sleep 25|

|com.objectmentor.fixtures.CommandLineFixture|
|command|mstr-script/copy-file.sh ${dbname} ${mstrServer} User_Dashboard_Dataset.csv|
*!
*!
!*> '''Then''' Compare the data on source and target
!include .SaasBiTest.CreateFunction

!*> Drop table if exists
!|Execute|DROP TABLE IF EXISTS dbfit_test.user_report1 CASCADE|

|commit|
*!
!*> Load CSV file into DB
!|Execute|!- set schema 'dbfit_test' -!|

!|Execute|!- 
DO $$ BEGIN
      PERFORM "load_csv_file2"('user_report1','/home/jenkins/workspace/-!${dbname}!-/User_Dashboard_Dataset.csv',8);
END $$;

-!|

|commit|
*!
!*> Microstrategy Data (Target Data)
!|Store Query|!- select user1_event as eventname, number_of_user1s::int as LatestStatus_Cnt from dbfit_test.user_report1
where date = ltrim(to_char(date(now()),'mm/dd/yyyy'),'0') and user1_event not in ('Disabled','Deleted') -!|target_data|

*!

!*> Compare source data with target data
!*< Setup
!|dbfit.PostgresTest|
!|ConnectUsingFile|${env}|
|set option|bind symbols|false|
*!
!*> Source Query
!|Store Query|!- select eventname, count(distinct userid)::int as LatestStatus_Cnt from ( select userid, eventname,eventtimestamp, RANK() OVER(partition by userid order by eventtimestamp desc) as rnk from clientaudit.f_user_audit_activity where eventtimestamp <= date(now()) ) x where x.rnk=1 and x.eventname not in ('Deleted','Disabled') group by x.eventname -!|source_data|
*!

|compare stored queries|source_data|target_data|
|eventname?|LatestStatus_Cnt?|
*!
*!